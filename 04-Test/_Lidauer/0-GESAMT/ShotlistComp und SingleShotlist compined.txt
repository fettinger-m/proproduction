<template>
    <div id="shotlist">
        <b-container>
            <!-- Add Shotlist Button & Modal -->
            <b-row align-h="end">
                <b-col cols="3">
                    <!-- Add Button-->
                    <b-button
                            type="button"
                            @click="$bvModal.show('listcreation')"
                            variant="outline-primary"
                            class="float-right"
                    >
                        <font-awesome-icon :icon="['fas', 'plus-square']"/>
                        Add New Shotlist
                    </b-button>

                    <!-- Add Shot Dialog-->
                    <b-modal id="listcreation" hide-footer>
                        <template v-slot:modal-title>
                            <font-awesome-icon :icon="['fas', 'clipboard-list']"/>
                            Create a new shotlist
                        </template>
                        <CreateShotListModal
                                v-bind:shotlist-tabs="getshotlistTabs"
                        />
                    </b-modal>
                </b-col>
            </b-row>

            <b-row v-if="getshotlistTabs==null">
                <b-col>
                    <b-card>
                        You don't have any shotlists yet.
                    </b-card>
                </b-col>
            </b-row>
            <!-- All tabs -->
            <b-tabs content-class="mt-3">

                <!-- ONE SHOTLIST TAB -->
                <b-tab
                        active
                        v-for="(shotlistTab, index) in getshotlistTabs"
                        v-bind:key="index"
                >
                    <template v-slot:title>

                        <b-container>
                            <b-row>

                                <!-- SHOTLIST NAME-->
                                <b-col>
                                    <div>
                                        <!-- Input file -->
                                        <b-input
                                                v-if="shotlistTab.edit"
                                                v-model="shotlistTab.listName"
                                                :state="shotlistTab.listName.length >= 4"
                                                placeholder="Enter at least 4 characters"

                                        ></b-input>
                                        <!-- Normal Label-->
                                        <div v-else>
                                            <label class="tabtitle"> {{shotlistTab.listName}} </label>
                                        </div>
                                    </div>
                                </b-col>

                                <!-- Edit & Save Button-->
                                <b-col cols="2">
                                    <!-- Save Button -->
                                    <div v-show="shotlistTab.edit">
                                        <b-button
                                                @click="saveNameChange(shotlistTab)"
                                                variant="outline"
                                                :disabled="shotlistTab.listName.length < 4"
                                        >
                                            <font-awesome-icon :icon="['fas', 'check']"/>
                                        </b-button>
                                    </div>
                                    <!-- Edit Button -->
                                    <div v-show="!shotlistTab.edit">
                                        <b-button
                                                @click="shotlistTab.edit = true;"
                                                variant="outline"
                                        >
                                            <font-awesome-icon :icon="['fas', 'pen']"/>
                                        </b-button>
                                    </div>
                                </b-col>

                                <!-- Dropdown Settings -->
                                <b-col cols="2">
                                    <b-dropdown variant="outline" toggle-class="text-decoration-none" no-caret>
                                        <template v-slot:button-content>
                                            <font-awesome-icon :icon="['fas', 'cog']"/>
                                        </template>

                                        <!-- Delete button -->
                                        <b-form>
                                            <b-button
                                                    @click="$bvModal.show(index.toString())"
                                                    variant="outline-danger"
                                            >
                                                <font-awesome-icon :icon="['fas', 'trash-alt']"/>
                                                Delete List
                                            </b-button>

                                            <!-- Delete Dialog-->
                                            <b-modal :id="index.toString()" hide-footer title="Delete this shotlist?">
                                                <b-button variant="outline-danger" block
                                                          @click="deleteTab(shotlistTab); $bvModal.hide(index.toString())">
                                                    Delete
                                                </b-button>
                                                <b-button variant="outline-warning" block
                                                          @click="$bvModal.hide(index.toString())">
                                                    Cancle
                                                </b-button>
                                            </b-modal>
                                        </b-form>

                                    </b-dropdown>
                                </b-col>
                            </b-row>
                        </b-container>
                    </template>

                    <!-- Table Content -->
                    <div>
                        <!-- Controls -->
                        <div>
                            <b-row align-h="end">
                                <b-col cols="4">
                                    <div class="float-right mb-3">

                                        <!-- Shotlist download to Excel -->
                                        <downloadexcel
                                                class="btn btn-default"
                                                :data="shotlistTab.shots"
                                                :fields="excel_fields"
                                                worksheet="My Shotlist"
                                                name="shotlist.xls">

                                            <b-button variant="outline">
                                                Export to Excel
                                                <font-awesome-icon :icon="['fas', 'arrow-down']"/>
                                            </b-button>

                                        </downloadexcel>

                                        <!-- Button "Add New Shot"-->
                                        <b-button
                                                @click="$bvModal.show('create'+shotlistTab.id)"
                                                type="button"
                                                variant="outline-primary"
                                                class="float-right"
                                        >
                                            <font-awesome-icon :icon="['fas', 'plus-square']"/>
                                            Add New Shot
                                        </b-button>

                                        <!-- Modal Shot Creation-->
                                        <b-modal
                                                :id="'create'+shotlistTab.id"
                                                hide-footer
                                        >
                                            <template v-slot:modal-title>
                                                <font-awesome-icon :icon="['fas', 'video']"/>
                                                Create a new shot
                                            </template>

                                            <CreateShotModal
                                                    v-bind:shotlist_tab="shotlistTab"
                                                    v-bind:modalindex="'create'+shotlistTab.id"
                                            />
                                        </b-modal>

                                    </div>
                                </b-col>
                            </b-row>
                        </div>

                        <b-row>
                            <!-- Changing of Img size -->
                            <b-col>
                                <b-row cols="4">
                                    <b-col>Image Size:</b-col>
                                    <b-col>
                                        <b-form-select
                                                v-model="imgsize"
                                                :options="imgsizeoptions"
                                                size="sm"
                                        ></b-form-select>
                                    </b-col>
                                </b-row>
                            </b-col>
                            <!-- Selection of culomns shown-->
                            <b-col cols="10">
                                <b-checkbox
                                        v-for="field in fields"
                                        :key="field.key"
                                        v-model="field.visible"
                                        inline
                                        v-show="field.changeable"
                                >
                                    {{ field.label }}
                                </b-checkbox>
                            </b-col>
                        </b-row>

                        <!-- THE TABLE-->
                        <!-- v-sortable="sortableOptions"-->
                        <b-table
                                striped hover
                                :fields="visibleFields"
                                :items="shotlistTab.shots"
                        >
                            <template v-slot:cell(imageURL)="data">
                                <!-- Wenn Element leer - icon anzeigen - ansonsten Bild -->
                                <div v-if="data.value == null || data.value === ''">
                                    <font-awesome-icon class="icon" :icon="['fas', 'image']"/>
                                </div>
                                <div v-else>
                                    <img :src="require(`@/assets/${data.item.imageURL}`)" :height="imgsize" :alt="data.item.imageURL"/>
                                </div>

                            </template>

                            <!-- Number output -->
                            <template v-slot:cell(id)="data">
                                <div>
                                    {{data.item.id}}
                                </div>
                            </template>

                            <!-- Buttons die neben jeder Zeile stehen sollen -->
                            <template v-slot:cell(actions)="data">
                                <b-row>
                                    <b-col>
                                        <!-- Edit Button -->
                                        <b-button
                                                @click="$bvModal.show('edit'+data.item.id+shotlistTab.id)"
                                                variant="outline"
                                        >
                                            <font-awesome-icon :icon="['fas', 'pen']"/>
                                        </b-button>
                                        <b-modal :id="'edit'+data.item.id+shotlistTab.id" hide-footer title="Make any changes">
                                            <EditShotModal
                                                    v-bind:currentshotID="data.item.id"
                                                    v-bind:modalindex="'edit'+data.item.id+shotlistTab.id"
                                                    v-bind:shotlist_tab="shotlistTab"
                                                    v-bind:proj-id="id"
                                            />
                                        </b-modal>

                                        <!-- Delete button -->
                                        <b-button
                                                @click="$bvModal.show('delete'+data.item.id+shotlistTab.id)"
                                                variant="outline"
                                        >
                                            <font-awesome-icon :icon="['fas', 'trash-alt']"/>
                                        </b-button>
                                        <!-- Modal to open after click -->
                                        <b-modal :id="'delete'+data.item.id+shotlistTab.id" hide-footer title="Delete this shot?">
                                            <b-button variant="outline-danger" block
                                                      @click="deleteShotLocal(data.item.id, shotlistTab); $bvModal.hide('delete'+data.item.id+shotlistTab.id)">
                                                Delete
                                            </b-button>
                                            <b-button variant="outline-warning" block
                                                      @click="$bvModal.hide('delete'+data.item.id+shotlistTab.id)">Cancle
                                            </b-button>
                                        </b-modal>

                                    </b-col>
                                </b-row>
                            </template>
                        </b-table>
                    </div>
                </b-tab>
            </b-tabs>
        </b-container>
    </div>
</template>

<script>
    import CreateShotListModal from "@/pages/ShotlistStoryboard/CreateShotListModal";
    import {mapGetters, mapActions} from "vuex";
    import CreateShotModal from "@/pages/ShotlistStoryboard/CreateShotModal";
    import EditShotModal from "@/pages/ShotlistStoryboard/EditShotModal";
    import downloadexcel from 'vue-json-excel'

    export default {
        name: "ShotlistComp",
        components: {EditShotModal, CreateShotModal, CreateShotListModal, downloadexcel},
        data() {
            return {
                //VUEX ACTIONS
                ...mapActions(["deleteShot"]),

                imgsize: 70,

                imgsizeoptions: [
                    {value: '50', text: 'small'},
                    {value: '70', text: 'medium'},
                    {value: '90', text: 'big'},
                    {value: '120', text: 'extra big'},
                ],

                fields: [
                    {key: 'imageURL', label: 'Frame', sortable: false, visible: true, changeable: true},
                    {key: 'id', label: 'Number', sortable: true, visible: false, changeable: false},
                    {key: 'description', label: 'Description', sortable: true, visible: true, changeable: false},
                    {key: 'shotsize', label: 'Shotsize', visible: true, changeable: true},
                    {key: 'movement', label: 'Movement', visible: true, changeable: true},
                    {key: 'camera', label: 'Camera', sortable: true, visible: true, changeable: true},
                    {key: 'lens', label: 'Lens', sortable: true, visible: true, changeable: true},
                    {key: 'framerate', label: 'Framerate', visible: true, changeable: true},
                    {key: 'specialEquip', label: 'Special Equipment', visible: true, changeable: true},
                    {key: 'location', label: 'Location', sortable: true, visible: true, changeable: true},
                    {key: 'actions', label: '', visible: true, changeable: false},
                ],

                excel_fields: {
                    'Description': 'description',
                    'Shotsize': 'shotsize',
                    'Movement': 'movement',
                    'Camera': 'camera',
                    'Lens': 'lens',
                    'Framerate': 'framerate',
                    'Special Equipment': 'specialEquip',
                    'Location': 'location'
                },
            }
        },
        methods: {
            //VUEX ACTIONS
            ...mapActions(["updateShotlist","deleteShotlist"]),

            //Deletes the current Tab
            deleteTab(shotlist) {
                let payload = {
                    projId: this.id,
                    shotlistId: shotlist.id
                }
                // eslint-disable-next-line no-console
                console.log(payload)
                this.deleteShotlist(payload)
            },

            saveNameChange(shotlist) {
                let payload = {
                    projId: this.id,
                    updShotlist: shotlist
                }

                // eslint-disable-next-line no-console
                console.log(payload)
                this.updateShotlist(payload)

                shotlist.edit = false
            },

            deleteShotLocal(index, shotlistTab) {

                let payload = {
                    projId: this.id,
                    shotlistId: shotlistTab.id,
                    shotId: index
                }

                // eslint-disable-next-line no-console
                console.log(payload)

                this.deleteShot(payload)
            },

            getImgUrl(pic) {
                let image = '../../assets/' + pic;
                return image;
            }
        },
        computed: {
            ...mapGetters(["getProjectByID"]),

            id(){
                return sessionStorage.getItem('sessionProjectID');
            },

            getshotlistTabs(){
                return this.getProjectByID(sessionStorage.getItem('sessionProjectID')).shotlists
            },

            visibleFields() {
                return this.fields.filter(field => field.visible)
            },
            selectedproject(){
                return this.getProjectByID(sessionStorage.getItem('sessionProjectID'));
            },
            shots(){
                return this.getProjectByID(sessionStorage.getItem('sessionProjectID')).shotlists.find(shotlist => shotlist.id === this.shotlistId).shots
            }
        },
    }
</script>

<style scoped>
    #shotlist {

    }

    .tabtitle {
        color: #FF6852;
        font-size: large;
    }

    .icon {
        font-size: 35px;
    }
</style>